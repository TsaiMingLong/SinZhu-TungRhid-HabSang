#
# Build a minimal docker image for a static go binary.
# See README.md for a full description.
#

meta:
  project: KhehUe-WaveRNN

env=siatting:
  variables:
  - PANPUN=Elearning-202102
  - GIGIAN=si
  - BANGTSI=https://www.dropbox.com/s/6643qa843bb6tjf/Elearning-Hakka-202102.tar?dl=0
  - PINLUT=16k

alias=liah-giliau:
  tasks: [siatting, liah-giliau-job]

alias=tsuan-pianma:
  tasks: [siatting, tsuan-pianma-job]

alias=preprocess-tacotron:
  tasks: [siatting, preprocess-tacotron-job, ]

alias=tacotron:
  tasks: [siatting, tacotron-job, ]

alias=tacotron-gta:
  tasks: [siatting, tacotron-gta-job, ]

alias=preprocess-wavernn:
  tasks: [siatting, preprocess-wavernn-job, ]

alias=wavernn:
  tasks: [siatting, wavernn-job, ]

alias=huatsiann:
  tasks: [siatting, huatsiann-job, ]

mount=punte_giliau:
  bind: ./{env.PANPUN}
  path: /punte_giliau/

mount=giliau:
  bind: ./{env.PANPUN}-{env.GIGIAN}-{env.PINLUT}/
  path: /giliau/

mount=tshamsoo:
  bind: ./tshamsoo/
  path: /tshamsoo/
  read-only: true

mount=data:
  bind: ./{env.PANPUN}-{env.GIGIAN}-data/
  path: /data/

mount=outputs:
  bind: ./{env.PANPUN}-{env.GIGIAN}-model_outputs/
  path: /WaveRNN/model_outputs/

mount=checkpoints:
  bind: ./{env.PANPUN}-{env.GIGIAN}-checkpoints/
  path: /WaveRNN/checkpoints/

image=ubuntu:
  image: ubuntu
  tags: ['20.04']
  pull: once

job=liah-giliau-job:
  use: ubuntu
  env:
  - PANPUN={env.PANPUN}
  - BANGTSI={env.BANGTSI}
  command: |
    bash -eux -c '
      apt-get update
      apt-get install -y wget
      wget -O - $BANGTSI | tar -xvf - -C /punte_giliau
    '
  mounts: [punte_giliau, ]

job=tsuan-pianma-job:
  use: ubuntu
  env:
  - PANPUN={env.PANPUN}
  - GIGIAN={env.GIGIAN}
  - PINLUT={env.PINLUT}
  command: |
    bash -eux -c '
      apt-get update
      apt-get install -y ffmpeg sox
      cp -r csv_imtong /giliau/
      mkdir -p /giliau/mp3 /tsiamsi/mp3
      find . -name "*${GIGIAN}*.mp3" -exec ffmpeg -i {} -c:a pcm_s16le -ac 1 -ar 16000 /tsiamsi/{}.wav \;
      find /tsiamsi/ -type f -empty -delete
      find . -name "*${GIGIAN}*.mp3" -exec sox /tsiamsi/{}.wav /giliau/{}.wav silence 1 0.1 0.1% reverse silence 1 0.1 0.1% reverse \;
      find Elearning-202102-si-16k/mp3/ -size -1000c -delete
    '
  mounts: [punte_giliau, giliau, ]
  working-dir: /punte_giliau

image=hunlian-khuanking:
  image: hunlian-khuanking
  context: hunlian-khuanking

job=preprocess-tacotron-job:
  use: hunlian-khuanking
  env:
  - PANPUN={env.PANPUN}
  - GIGIAN={env.GIGIAN}
  - PINLUT={env.PINLUT}
  command: |
    bash -eux -c '
      cp /tshamsoo/hparams.py .
      cp /tshamsoo/preprocess-tacotron.py .
      cp /tshamsoo/text_init.py utils/text/__init__.py
      cp /tshamsoo/symbols.py utils/text/symbols.py
      python preprocess-tacotron.py --path /giliau/
    '
  mounts: [giliau, tshamsoo, data, ]

job=tacotron-job:
  use: hunlian-khuanking
  env:
  - PANPUN={env.PANPUN}
  - GIGIAN={env.GIGIAN}
  - CUDA_VISIBLE_DEVICES=0
  command: |
    bash -eux -c '
      cp /tshamsoo/hparams.py .
      cp /tshamsoo/text_init.py utils/text/__init__.py
      cp /tshamsoo/symbols.py utils/text/symbols.py
      python train_tacotron.py
    '
  mounts: [tshamsoo, data, checkpoints, ]

job=tacotron-gta-job:
  use: hunlian-khuanking
  env:
  - PANPUN={env.PANPUN}
  - GIGIAN={env.GIGIAN}
  - CUDA_VISIBLE_DEVICES=0
  command: |
    bash -eux -c '
      cp /tshamsoo/hparams.py .
      cp /tshamsoo/text_init.py utils/text/__init__.py
      cp /tshamsoo/symbols.py utils/text/symbols.py
      python train_tacotron.py --force_gta
    '
  mounts: [tshamsoo, data, checkpoints, ]

job=preprocess-wavernn-job:
  use: hunlian-khuanking
  env:
  - PANPUN={env.PANPUN}
  - GIGIAN={env.GIGIAN}
  command: |
    bash -eux -c '
      cp /tshamsoo/hparams.py .
      cp /tshamsoo/preprocess-wavernn.py .
      python preprocess-wavernn.py --path /data/gta/
    '
  mounts: [tshamsoo, data, ]

job=wavernn-job:
  use: hunlian-khuanking
  env:
  - PANPUN={env.PANPUN}
  - GIGIAN={env.GIGIAN}
  - CUDA_VISIBLE_DEVICES=0
  command: |
    bash -eux -c '
      cp /tshamsoo/hparams.py .
      cp /tshamsoo/text_init.py utils/text/__init__.py
      cp /tshamsoo/symbols.py utils/text/symbols.py
      sed -i "s/dataset.pkl/dataset_wavernn.pkl/g" utils/dataset.py
      python train_wavernn.py --gta
    '
  mounts: [tshamsoo, data, checkpoints, outputs, ]

job=huatsiann-job:
  use: hunlian-khuanking
  env:
  - PANPUN={env.PANPUN}
  - GIGIAN={env.GIGIAN}
  - CUDA_VISIBLE_DEVICES=1
  command: |
    bash -eux -c '
      cp /tshamsoo/hparams.py .
      cp /tshamsoo/text_init.py utils/text/__init__.py
      cp /tshamsoo/symbols.py utils/text/symbols.py
      sed -i "s/required=True, //g" gen_tacotron.py
      time python gen_tacotron.py --input_text "tak10-ke7 tsə2-hue1 lai7 tsʰit8-tʰə5 !" griffinlim
      time python gen_tacotron.py --input_text "tak10-ke7 tsə2-hue1 lai7 tsʰit8-tʰə5 !" wavernn
      time python gen_tacotron.py --input_text "tak10-ke7 tsə2-hue1 lai7 tsʰit8-tʰə5 !" wavernn --unbatched
    '
  mounts: [tshamsoo, checkpoints, outputs, ]

image=hokbu-khuanking:
  image: i3thuan5/suisiann-wavernn
  context: .
